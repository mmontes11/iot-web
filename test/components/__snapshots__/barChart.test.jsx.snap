// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/barChart renders chart with units in title 1`] = `
<div
  className="box"
>
  <div
    className="columns"
  >
    <div
      className="column"
    >
      <p
        className="title is-3 has-text-primary has-text-centered is-spaced"
      >
        measurement (ÂºC)
      </p>
      <div
        className="barchart"
      >
        <ResponsiveContainer
          debounce={0}
          height="100%"
          width="100%"
        >
          <BarChart
            barCategoryGap="10%"
            barGap={4}
            data={
              Array [
                Object {
                  "thing": "raspi",
                  "value": 10,
                },
                Object {
                  "thing": "raspi2",
                  "value": 11,
                },
                Object {
                  "thing": "raspi3",
                  "value": 12,
                },
              ]
            }
            layout="horizontal"
            margin={
              Object {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            reverseStackOrder={false}
            stackOffset="none"
          >
            <CartesianGrid
              fill="none"
              horizontal={true}
              horizontalFill={Array []}
              horizontalPoints={Array []}
              stroke="#ccc"
              strokeDasharray="3 3"
              vertical={true}
              verticalFill={Array []}
              verticalPoints={Array []}
            />
            <XAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              dataKey="thing"
              domain={
                Array [
                  0,
                  "auto",
                ]
              }
              height={30}
              hide={false}
              mirror={false}
              orientation="bottom"
              padding={
                Object {
                  "left": 0,
                  "right": 0,
                }
              }
              reversed={false}
              scale="auto"
              tickCount={5}
              type="category"
              width={0}
              xAxisId={0}
            />
            <YAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              domain={
                Array [
                  0,
                  "auto",
                ]
              }
              height={0}
              hide={false}
              mirror={false}
              orientation="left"
              padding={
                Object {
                  "bottom": 0,
                  "top": 0,
                }
              }
              reversed={false}
              scale="auto"
              tickCount={5}
              type="number"
              width={60}
              yAxisId={0}
            />
            <Tooltip
              active={false}
              animationDuration={400}
              animationEasing="ease"
              contentStyle={Object {}}
              coordinate={
                Object {
                  "x": 0,
                  "y": 0,
                }
              }
              cursor={true}
              cursorStyle={Object {}}
              filterNull={true}
              isAnimationActive={true}
              itemSorter={[Function]}
              itemStyle={Object {}}
              labelStyle={Object {}}
              offset={10}
              separator=" : "
              useTranslate3d={false}
              viewBox={
                Object {
                  "x1": 0,
                  "x2": 0,
                  "y1": 0,
                  "y2": 0,
                }
              }
              wrapperStyle={Object {}}
            />
            <Legend
              align="center"
              iconSize={14}
              layout="horizontal"
              verticalAlign="bottom"
            />
            <Bar
              animationBegin={0}
              animationDuration={400}
              animationEasing="ease"
              data={Array []}
              dataKey="value"
              fill="#247ba0"
              hide={false}
              isAnimationActive={true}
              key="value"
              layout="vertical"
              legendType="rect"
              minPointSize={0}
              onAnimationEnd={[Function]}
              onAnimationStart={[Function]}
              xAxisId={0}
              yAxisId={0}
            />
          </BarChart>
        </ResponsiveContainer>
      </div>
    </div>
  </div>
</div>
`;

exports[`components/barChart renders chart withou units in title 1`] = `
<div
  className="box"
>
  <div
    className="columns"
  >
    <div
      className="column"
    >
      <p
        className="title is-3 has-text-primary has-text-centered is-spaced"
      >
        measurement2
      </p>
      <div
        className="barchart"
      >
        <ResponsiveContainer
          debounce={0}
          height="100%"
          width="100%"
        >
          <BarChart
            barCategoryGap="10%"
            barGap={4}
            data={
              Array [
                Object {
                  "thing": "raspi",
                  "value": 10,
                },
                Object {
                  "thing": "raspi2",
                  "value": 11,
                },
                Object {
                  "thing": "raspi3",
                  "value": 12,
                },
              ]
            }
            layout="horizontal"
            margin={
              Object {
                "bottom": 5,
                "left": 5,
                "right": 5,
                "top": 5,
              }
            }
            reverseStackOrder={false}
            stackOffset="none"
          >
            <CartesianGrid
              fill="none"
              horizontal={true}
              horizontalFill={Array []}
              horizontalPoints={Array []}
              stroke="#ccc"
              strokeDasharray="3 3"
              vertical={true}
              verticalFill={Array []}
              verticalPoints={Array []}
            />
            <XAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              dataKey="thing"
              domain={
                Array [
                  0,
                  "auto",
                ]
              }
              height={30}
              hide={false}
              mirror={false}
              orientation="bottom"
              padding={
                Object {
                  "left": 0,
                  "right": 0,
                }
              }
              reversed={false}
              scale="auto"
              tickCount={5}
              type="category"
              width={0}
              xAxisId={0}
            />
            <YAxis
              allowDataOverflow={false}
              allowDecimals={true}
              allowDuplicatedCategory={true}
              domain={
                Array [
                  0,
                  "auto",
                ]
              }
              height={0}
              hide={false}
              mirror={false}
              orientation="left"
              padding={
                Object {
                  "bottom": 0,
                  "top": 0,
                }
              }
              reversed={false}
              scale="auto"
              tickCount={5}
              type="number"
              width={60}
              yAxisId={0}
            />
            <Tooltip
              active={false}
              animationDuration={400}
              animationEasing="ease"
              contentStyle={Object {}}
              coordinate={
                Object {
                  "x": 0,
                  "y": 0,
                }
              }
              cursor={true}
              cursorStyle={Object {}}
              filterNull={true}
              isAnimationActive={true}
              itemSorter={[Function]}
              itemStyle={Object {}}
              labelStyle={Object {}}
              offset={10}
              separator=" : "
              useTranslate3d={false}
              viewBox={
                Object {
                  "x1": 0,
                  "x2": 0,
                  "y1": 0,
                  "y2": 0,
                }
              }
              wrapperStyle={Object {}}
            />
            <Legend
              align="center"
              iconSize={14}
              layout="horizontal"
              verticalAlign="bottom"
            />
            <Bar
              animationBegin={0}
              animationDuration={400}
              animationEasing="ease"
              data={Array []}
              dataKey="value"
              fill="#247ba0"
              hide={false}
              isAnimationActive={true}
              key="value"
              layout="vertical"
              legendType="rect"
              minPointSize={0}
              onAnimationEnd={[Function]}
              onAnimationStart={[Function]}
              xAxisId={0}
              yAxisId={0}
            />
          </BarChart>
        </ResponsiveContainer>
      </div>
    </div>
  </div>
</div>
`;
